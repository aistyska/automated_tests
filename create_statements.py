import requests
from datetime import datetime


statements = [
    ["minus01", -367.99, "2020-09-06 11:45:00"],

    ["plius01", 0.99, "2020-09-02 15:12:01"],

    ["accm01", -44.97, "2020-08-25 08:08:06"],
    ["accm01", -44.97, "2020-08-29 09:11:13"],

    ["accm02", -234.01, "2020-07-24 10:15:19"],
    ["accm02", 34.00, "2020-08-27 18:56:20"],

    ["accm03", -97.23, "2020-07-23 14:25:07"],
    ["accm03", 145.99, "2020-07-25 12:11:19"],

    ["accm04", -1598.00, "2020-08-23 12:48:22"],
    ["accm04", 1598.00, "2020-08-21 11:11:45"],

    ["accm05", -1234.56, "2020-08-11 18:12:01"],
    ["accm05", 2345.67, "2020-07-11 18:12:01"],

    ["accm06", -321.54, "2020-09-01 19:54:20"],
    ["accm06", 27.77, "2020-08-31 14:45:23"],

    ["accp01", 675.98, "2020-07-07 12:12:32"],
    ["accp01", -675.98, "2020-07-22 07:18:06"],

    ["accp02", 353.77, "2020-06-26 22:35:18"],
    ["accp02", -467.91, "2020-07-01 12:42:22"],

    ["accp03", 597.67, "2020-08-30 09:04:56"],
    ["accp03", -230.98, "2020-09-03 08:59:03"],

    ["accp04", 301.00, "2020-09-01 13:14:15"],
    ["accp04", -301.00, "2019-09-01 13:14:15"],

    ["accp05", 596.81, "2020-06-19 19:01:55"],
    ["accp05", -600.00, "2020-05-23 15:55:19"],

    ["accp06", 495.76, "2020-07-05 16:24:44"],
    ["accp06", -29.97, "2020-07-05 15:24:44"],

    ["t_acc01",	20.00, "2020-04-04 11:23:18"],
    ["t_acc01", 199.00, "2020-04-29 14:45:33"],
    ["t_acc01",	-130.00, "2020-05-02 16:17:18"],
    ["t_acc01", -55.00, "2020-05-13 19:25:44"],
    ["t_acc01",	-95.99,	"2020-05-19 14:11:09"],

    ["t_acc02",	35.00, "2020-05-01 09:12:10"],
    ["t_acc02", -15.00, "2020-05-02 10:18:08"],
    ["t_acc02", -20.00, "2020-05-03 08:09:10"],

    ["t_acc03", 341.92, "2020-06-06 06:06:06"],
    ["t_acc03", -122.56, "2020-06-12 12:16:16"],
    ["t_acc03", -0.99, "2020-06-18 11:17:57"],
    ["t_acc03", 435.22, "2020-06-01 21:09:11"],

    ["t_acc04", 711.02, "2020-06-18 15:17:23"],
    ["t_acc04", -330.80, "2020-07-01 17:18:44"],
    ["t_acc04", -222.22, "2020-06-12 08:08:17"],

    ["t_acc05", 199232.17, "2020-08-09 08:22:11"],
    ["t_acc05", -234.99, "2020-08-12 20:12:55"],
    ["t_acc05", -1001.01, "2020-08-16 21:01:34"],
    ["t_acc05",	-9999.99, "2020-08-21 11:03:33"],
    ["t_acc05", -13333.51, "2020-09-07 19:02:22"],
    ["t_acc05", -67832.10, "2020-07-01 18:15:51"],
    ["t_acc05", 25001.98, "2020-06-01 08:17:42"],

    ["t_acc06", 610.67, "2020-05-05 10:22:21"],
    ["t_acc06", -410.63, "2020-05-15 17:18:19"],
    ["t_acc06", 610.67, "2020-06-05 12:10:02"],
    ["t_acc06", -410.63, "2020-06-15 14:11:34"],
    ["t_acc06", 610.67, "2020-07-05 09:09:11"],
    ["t_acc06", -410.63, "2020-07-15 19:28:22"],
    ["t_acc06", 610.67, "2020-08-05 14:34:55"],
    ["t_acc06", -410.63, "2020-08-15 12:55:59"],

    ["t_acc07", 666.66, "2020-04-07 13:33:11"],
    ["t_acc07", -666.66, "2020-05-06 16:15:43"],
    ["t_acc07", 666.66, "2020-05-07 11:31:40"],
    ["t_acc07", -666.66, "2020-06-06 16:17:18"],
    ["t_acc07", 666.66, "2020-06-07 09:56:09"],
    ["t_acc07", -666.66, "2020-04-06 11:25:51"],

    ["t_acc08", 471.88, "2020-02-08 08:02:30"],
    ["t_acc08", -73.98, "2020-02-28 09:29:11"],
    ["t_acc08", 321.67, "2020-03-28 16:31:49"],
    ["t_acc08", 81.01, "2020-03-05 19:17:00"],
    ["t_acc08", -219.1, "2020-05-19 12:09:09"],

    ["t_acc09", 33.33, "2020-01-01 12:02:35"],
    ["t_acc09", -65.78, "2020-03-01 19:07:26"],
    ["t_acc09", 254.98, "2020-03-23 13:44:42"],
    ["t_acc09", -102.01, "2020-02-02 08:59:09"],
    ["t_acc09", 93.9, "2020-03-23 13:44:43"],

    ["n_acc01", -20.01, "2020-04-22 18:03:19"],
    ["n_acc01", -20.99, "2020-04-30 17:33:51"],
    ["n_acc01", 29.11, "2020-05-03 13:53:31"],

    ["n_acc02", -444.44, "2020-06-01 14:28:40"],
    ["n_acc02", 323.93, "2020-06-23 11:59:05"],
    ["n_acc02", 234.78, "2020-06-01 14:28:39"],

    ["n_acc03", -39.93, "2020-06-19 13:57:49"],
    ["n_acc03", -54.12, "2020-06-12 19:31:19"],
    ["n_acc03", -13.98, "2020-05-19 15:54:30"],
    ["n_acc03", -2100.35, "2020-05-06 09:18:47"],

    ["n_acc04", -9.99, "2020-06-18 13:01:29"],
    ["n_acc04", -10.01, "2020-06-21 19:53:01"],
    ["n_acc04", -33.00, "2020-07-04 16:11:51"],
    ["n_acc04", -19.23, "2020-07-29 13:51:36"],
    ["n_acc04", 72.23, "2020-06-05 23:19:31"],

    ["n_acc05", -129.13, "2020-01-15 12:56:17"],
    ["n_acc05", -12.39, "2020-01-29 18:29:11"],
    ["n_acc05", 49.99, "2020-02-27 10:09:18"],
    ["n_acc05", -5.99, "2020-02-28 21:17:27"],
    ["n_acc05", -1.09, "2019-12-13 09:11:14"],
    ["n_acc05", 215.89, "2019-12-12 14:19:50"],

    ["n_acc06", -75.99, "2020-03-07 12:59:05"],
    ["n_acc06", 12.94, "2020-03-29 17:52:16"],
    ["n_acc06", -89.91, "2020-03-19 14:03:19"],
    ["n_acc06", 54.11, "2020-06-01 07:15:33"],
    ["n_acc06", -0.01, "2020-05-01 19:43:31"],
    ["n_acc06", 27.81, "2020-04-15 10:25:16"]
]


for statement in statements:
    response = requests.post('http://localhost:9999/statements', json={
        "statement": {
            "account_id": statement[0],
            "amount": statement[1],
            "currency": "EUR",
            "date": int(datetime.timestamp(datetime.strptime(statement[2], "%Y-%m-%d %H:%M:%S")))
        }
    })
    if response.status_code != 204:
        print("FAILED! account_id = ", statement[0])
        print(response.status_code)
        print(response.text)
        exit()

print("DONE")
